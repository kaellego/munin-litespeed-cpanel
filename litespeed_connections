#!/usr/local/cpanel/3rdparty/perl/536/bin/perl -w
# -*- perl -*-

use strict;
use warnings;

if ( defined $ARGV[0] and $ARGV[0] eq "autoconf" )
{
    if ( -e '/dev/shm/lsws/status/.rtreport' ) {
        print "yes\n";
        exit 0;
    } else {
        print "no\n";
        exit 1;
    }
}

if ( defined $ARGV[0] and $ARGV[0] eq "config" )
{
    my $max = 0;
    if (open my $IN, "</dev/shm/lsws/status/.rtreport") {
        while ( <$IN> ) {
            if ( /^MAXCONN: (\d+),/ ) {
                $max = $1;
                last;
            }
        }
        close $IN;
    }
    print "graph_title Litespeed : connections (max. $max)\n";
    print "graph_args --base 1000 -l 0\n";
    print "graph_scale no\n";
    print "graph_vlabel connections\n";
    print "graph_category litespeed\n";
    print "graph_order used idle\n";
    print "used.label used\n";
    print "used.draw AREA\n";
    print "idle.label idle\n";
    print "idle.draw LINE1\n";
    exit 0;
}

if ( ! -e '/dev/shm/lsws/status/.rtreport' ) {
    print "used.value 0\n";
    print "idle.value 0\n";
    exit 0;
}

my $used = 0;
my $idle = 0;

my @stats = `ls -a /dev/shm/lsws/status/.rtreport*`;
foreach my $rep ( @stats ) {
    chomp($rep);
    next unless -f $rep; # Pula se n√£o for um arquivo regular
    if (open my $IN, "<", $rep) {
        while ( <$IN> ) {
            if ( /PLAINCONN: (\d+), AVAILCONN: \d+, IDLECONN: (\d+),/ ) {
                $used += $1;
                $idle += $2;
                last;
            }
        }
        close $IN;
    }
}
print "used.value $used\nidle.value $idle\n";
exit 0;
