#!/usr/local/cpanel/3rdparty/perl/536/bin/perl -w
# -*- perl -*-

# Plugin to monitor LiteSpeed requests

use strict;
use warnings;

my $report_file = '/dev/shm/lsws/status/.rtreport';

# Autoconfig
if ( defined $ARGV[0] and $ARGV[0] eq "autoconf" ) {
    if ( -e $report_file ) {
        print "yes\n";
        exit 0;
    } else {
        print "no (LiteSpeed report file not found)\n";
        exit 1;
    }
}

# Config
if ( defined $ARGV[0] and $ARGV[0] eq "config" ) {
    print "graph_title Litespeed: Requisicoes\n";
    print "graph_args --base 1000 --lower-limit 0\n";
    print "graph_vlabel requisicoes\n";
    print "graph_category litespeed\n";
    
    print "rqip.label Em processamento\n";
    print "rqip.type GAUGE\n";
    print "rqip.draw AREA\n";
    
    print "rqps.label Requisicoes / segundo\n";
    print "rqps.type GAUGE\n";
    print "rqps.draw LINE1\n";
    
    print "rqtot.label Total de requisicoes\n";
    print "rqtot.type COUNTER\n";
    print "rqtot.draw LINE2\n";
    exit 0;
}

# Data Collection
my ($rqip, $rqps, $rqtot) = (0, 0, 0);

if ( -e $report_file ) {
    # Open the file safely
    unless (open my $IN, "<", $report_file) {
        warn "Could not open '$report_file': $!";
        # We will exit gracefully, reporting 0
    } else {
        while (my $line = <$IN>) {
            # Extract values using a regular expression
            if ( $line =~ /REQ_PROCESSING: (\d+), REQ_PER_SEC: ([0-9]*\.?[0-9]+), TOT_REQS: (\d+)/ ) {
                $rqip  = $1;
                $rqps  = $2;
                $rqtot = $3;
                last; # The necessary information is on a single line
            }
        }
        close $IN;
    }
}

print "rqip.value $rqip\n";
print "rqps.value $rqps\n";
print "rqtot.value $rqtot\n";

exit 0;
